export interface CreateCompanyRequest {
    name: string;
    rfc: string;
    legalName: string;
    address: string;
    email: string;
    phone?: string;
    status?: string;
    paymentMethod?: string;
    bankAccount?: string;
}
export interface UpdateCompanyRequest extends Partial<CreateCompanyRequest> {
    id: number;
}
export declare class CompanyService {
    static getAllCompanies(operatorOnly?: boolean): Promise<{
        id: any;
        name: any;
        rfc: any;
        legalName: any;
        address: any;
        email: any;
        phone: any;
        status: string;
        employeesCount: any;
        payrollsCount: any;
        incidencesCount: any;
        calendarsCount: any;
        paymentMethod: any;
        bankAccount: any;
        recentPayrolls: any;
        activeCalendars: any;
        createdAt: any;
        updatedAt: any;
    }[]>;
    static getCompanyById(id: number, includeDetails?: boolean): Promise<{
        createdAt: Date;
        updatedAt: Date;
        employees?: ({
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        } | {
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        })[] | ({
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        } | {
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        })[] | ({
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        } | {
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        })[] | ({
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        } | {
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        })[] | ({
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        } | {
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        })[] | ({
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        } | {
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        })[] | {
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        }[] | {
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        }[] | {
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        }[] | {
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        }[] | {
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        }[] | {
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        }[] | undefined;
        payrolls?: ({
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        } | {
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        })[] | ({
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        } | {
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        })[] | ({
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        } | {
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        })[] | ({
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        } | {
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        })[] | ({
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        } | {
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        })[] | ({
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        } | {
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        })[] | {
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        }[] | {
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        }[] | {
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        }[] | {
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        }[] | {
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        }[] | {
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        }[] | undefined;
        calendars?: ({
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        } | {
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        })[] | ({
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        } | {
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        })[] | ({
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        } | {
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        })[] | ({
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        } | {
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        })[] | ({
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        } | {
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        })[] | ({
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        } | {
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        })[] | {
            email: string;
            password: string;
            id: number;
            name: string;
            role: import(".prisma/client").$Enums.UserRole;
            isActive: boolean;
            companyId: number | null;
            employeeId: number | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        }[] | {
            email: string | null;
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            rfc: string;
            address: string | null;
            phone: string | null;
            status: import(".prisma/client").$Enums.EmployeeStatus;
            bankAccount: string | null;
            taxRegime: string | null;
            employeeNumber: string;
            position: string;
            department: string;
            hireDate: Date;
            contractType: import(".prisma/client").$Enums.ContractType;
            workSchedule: string | null;
            baseSalary: import("@prisma/client/runtime/library").Decimal;
            dateOfBirth: Date | null;
            emergencyContact: string | null;
            bankName: string | null;
            clabe: string | null;
        }[] | {
            id: number;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PayrollStatus;
            period: string;
            periodStart: Date;
            periodEnd: Date;
            totalGross: import("@prisma/client/runtime/library").Decimal;
            totalDeductions: import("@prisma/client/runtime/library").Decimal;
            totalNet: import("@prisma/client/runtime/library").Decimal;
            employeeCount: number;
            processedAt: Date | null;
            authorizedAt: Date | null;
            authorizedBy: string | null;
            xmlPath: string | null;
            pdfPath: string | null;
        }[] | {
            id: number;
            companyId: number;
            employeeId: number;
            createdAt: Date;
            updatedAt: Date;
            type: import(".prisma/client").$Enums.IncidenceType;
            date: Date;
            status: import(".prisma/client").$Enums.IncidenceStatus;
            amount: import("@prisma/client/runtime/library").Decimal | null;
            quantity: import("@prisma/client/runtime/library").Decimal;
            description: string | null;
            payrollId: number | null;
        }[] | {
            message: string;
            id: number;
            companyId: number | null;
            createdAt: Date;
            type: import(".prisma/client").$Enums.NotificationType;
            payrollId: number | null;
            title: string;
            priority: import(".prisma/client").$Enums.NotificationPriority;
            read: boolean;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            readAt: Date | null;
        }[] | {
            id: number;
            name: string;
            companyId: number;
            createdAt: Date;
            updatedAt: Date;
            year: number;
            workDays: import("@prisma/client/runtime/library").JsonValue;
            holidays: import("@prisma/client/runtime/library").JsonValue;
            isDefault: boolean;
        }[] | undefined;
        id: number;
        name: string;
        rfc: string;
        legalName: string;
        address: string;
        email: string;
        phone: string | null;
        status: string;
        employeesCount: any;
        paymentMethod: string | null;
        bankAccount: string | null;
    }>;
    static createCompany(data: CreateCompanyRequest): Promise<{
        id: number;
        name: string;
        rfc: string;
        legalName: string;
        address: string;
        email: string;
        phone: string | null;
        status: string;
        employeesCount: number;
        createdAt: Date;
        updatedAt: Date;
    }>;
    static updateCompany(data: UpdateCompanyRequest): Promise<{
        id: number;
        name: string;
        rfc: string;
        legalName: string;
        address: string;
        email: string;
        phone: string | null;
        status: string;
        employeesCount: number;
        paymentMethod: string | null;
        bankAccount: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    static deleteCompany(id: number): Promise<{
        message: string;
        companyId: number;
    }>;
    static getCompanyStats(id: number): Promise<{
        companyId: number;
        employees: {
            total: any;
            active: any;
        };
        payrolls: {
            total: any;
            totalAmount: any;
            avgAmount: number;
            byStatus: any;
        };
        incidences: {
            total: any;
            totalAmount: any;
            byType: any;
        };
        calendars: {
            total: any;
        };
    }>;
    private static mapStatusToFrontend;
    private static mapStatusFromFrontend;
}
//# sourceMappingURL=companyService.d.ts.map